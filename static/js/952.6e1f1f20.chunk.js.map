{"version":3,"file":"static/js/952.6e1f1f20.chunk.js","mappings":"+OAGaA,EAAcC,EAAAA,EAAAA,IAAH,8GASXC,EAAQD,EAAAA,EAAAA,MAAH,+GAQLE,GAAQF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,oJAULI,EAASJ,EAAAA,EAAAA,OAAH,0KAWNK,EAAYL,EAAAA,EAAAA,EAAH,uC,wCCvCTM,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EAEvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAInBC,GAAkBC,EAAAA,EAAAA,IAC7B,CAACT,EAHyB,SAAAC,GAAK,OAAIA,EAAMS,MAAV,IAI/B,SAACR,EAAUQ,GAEH,OAAOR,EAASQ,QAAO,SAAAC,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASJ,EAAOG,cADf,GAMrC,I,SCNGE,EAAeC,EAAAA,KAAaC,MAAM,CACtCL,KAAMI,EAAAA,KACHE,IAAI,EAAG,gCACPC,IAAI,GAFD,2BAGHC,SAAS,YACZC,OAAQL,EAAAA,KACLI,SAAS,YACTF,IAAI,EAAG,gBACPC,IAAI,GAAI,mBAGPG,EAAY,SAAC,GAAc,IAAZV,EAAW,EAAXA,KACnB,OACE,SAAC,KAAD,CACEA,KAAMA,EACNW,OAAQ,SAAAC,GAAO,OACb,+BACE,SAACzB,EAAD,UAAYyB,KAFD,GAOpB,EAEKC,EAAgB,CACpBb,KAAM,GACNS,OAAQ,IAGGK,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACX1B,GAAW2B,EAAAA,EAAAA,IAAY7B,GAY7B,OACE,SAAC,KAAD,CACEyB,cAAeA,EACfK,SAbiB,SAAC,EAAD,GAAsC,IAAnClB,EAAkC,EAAlCA,KAAMS,EAA4B,EAA5BA,OAAYU,EAAgB,EAAhBA,UAExC,GAAG7B,EAAS8B,MAAK,SAAArB,GAAO,OAAEA,EAAQC,KAAKC,aAAaF,EAAQU,SAASA,CAA7C,IACtB,OAAOY,MAAM,yBAGfN,GAASO,EAAAA,EAAAA,IAAY,CAAEtB,KAAAA,EAAMS,OAAAA,KAC7BU,GACD,EAMGI,iBAAkBpB,EAHpB,UAKE,SAACtB,EAAD,WACE,UAAC,KAAD,YACE,UAACE,EAAD,mBAEE,SAACC,EAAD,CAAOwC,KAAK,OAAOxB,KAAK,UACxB,SAACU,EAAD,CAAWV,KAAK,aAGlB,UAACjB,EAAD,qBAEE,SAACC,EAAD,CAAOwC,KAAK,MAAMxB,KAAK,YACvB,SAACU,EAAD,CAAWV,KAAK,eAGlB,SAACd,EAAD,CAAQsC,KAAK,SAAb,+BAKT,EChFYC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,gCACE,wBAAKD,IACJC,IAGN,E,UCPYC,EAAiB9C,EAAAA,EAAAA,IAAH,0CAId+C,EAAQ/C,EAAAA,EAAAA,GAAH,2CAILgD,EAAYhD,EAAAA,EAAAA,OAAH,wCCLTiD,EAAU,SAAC,GAA0B,IAAxB/B,EAAuB,EAAvBA,KAAMgC,EAAiB,EAAjBA,GAAIvB,EAAa,EAAbA,OAC5BM,GAAWC,EAAAA,EAAAA,MAKjB,OACE,UAACY,EAAD,YACE,UAACC,EAAD,WACG7B,EADH,MACYS,MAEZ,SAACqB,EAAD,CAAWN,KAAK,SAASS,QARR,WACnBlB,GAASmB,EAAAA,EAAAA,IAAeF,GACzB,EAMG,sBAKL,ECnBYG,EAAOrD,EAAAA,EAAAA,GAAH,gECIJsD,EAAc,WACzB,IAAM9C,GAAW2B,EAAAA,EAAAA,IAAYrB,GAE7B,OACE,0BAEGN,EAAS+C,KAAI,SAAAtC,GACV,OACE,SAACoC,EAAD,WACE,SAACJ,GAAD,UAAahC,KADJA,EAAQiC,GAItB,KAEC1C,EAASgD,SAAQ,yCAK1B,E,UCvBYvD,EAAQD,EAAAA,EAAAA,MAAH,gHASLE,EAAQF,EAAAA,EAAAA,MAAH,kJ,UCNLyD,EAAS,WACpB,IAAMxB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,0BACE,UAAC,EAAD,mCAEE,SAAC,EAAD,CAAOwB,SATc,SAAAC,GACzB,IAAQC,EAAUD,EAAME,OAAhBD,MACR3B,GAAS6B,EAAAA,EAAAA,GAAUF,GACpB,EAM0ClB,KAAK,OAAOxB,KAAK,eAI7D,E,UClBY6C,EAAY/D,EAAAA,EAAAA,IAAH,uFAMTgE,EAAgBhE,EAAAA,EAAAA,GAAH,kECMX,SAASiE,IAEtB,IAAMpD,GAAQsB,EAAAA,EAAAA,IAAYvB,GACpBD,GAAYwB,EAAAA,EAAAA,IAAYzB,GACxBuB,GAAWC,EAAAA,EAAAA,MAOjB,OANFgC,QAAQC,IAAIxD,IAEVyD,EAAAA,EAAAA,YAAU,WACRnC,GAASoC,EAAAA,EAAAA,MACV,GAAE,CAACpC,KAGF,UAAC8B,EAAD,YACE,SAACpB,EAAD,CAASC,MAAM,YAAf,UACE,SAACZ,EAAD,OAGF,SAACgC,EAAD,wBACA,SAACP,EAAD,IAEE9C,IAAYE,GAAM,SAAC,KAAD,KAAgB,SAACyC,EAAD,MAGzC,C","sources":["components/FormContacts/FormContacts.styled.js","redux/Contact/selectors.js","components/FormContacts/FormContacts.jsx","components/Section/Section.jsx","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const FormWrapper = styled.div`\n  width: 400px;\n  height: 350px;\n  padding: 10px;\n \n\n  border: 1px solid black;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  padding-bottom: 20px;\n\n  font-size: 22px;\n  font-weight: 500;\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  width: 170px;\n  height: 30px;\n  box-shadow: 5px 5px 5px 0;\n  margin: 10px 0;\n\n  font-size: 18px;\n`;\n\nexport const BtnAdd = styled.button`\n  display: block;\n  padding: 4px;\n  border-radius: 5px;\n  font-size: 16px;\n  font-weight: 700;\n  :hover {\n    background-color: blue;\n  }\n`;\n\nexport const ErrorText = styled.p`\n  color: red;\n`;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const visibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n  \n          return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase()))\n     \n      \n    \n    \n  }\n);\n\n\n","import {\n  BtnAdd,\n  FormWrapper,\n  Input,\n  Label,\n  ErrorText,\n} from './FormContacts.styled';\n\nimport { Formik, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { addContacts } from 'redux/Contact/operations';\nimport { selectContacts } from 'redux/Contact/selectors';\n\nconst FilterSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Please, enter your full name')\n    .max(26, `Your upper limit symbol`)\n    .required('Required'),\n  number: Yup.string()\n    .required('Required')\n    .min(6, 'Min 6 symbol')\n    .max(22, 'Max symbol 22'),\n});\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => (\n        <>\n          <ErrorText>{message}</ErrorText>\n        </>\n      )}\n    />\n  );\n};\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const FormContacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts)\n\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    \n    if(contacts.some(contact=>contact.name.toLowerCase||contact.number===number)){\n      return alert(\"You have this contact\")\n    }\n    \n    dispatch(addContacts({ name, number }));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={FilterSchema}\n    >\n      <FormWrapper>\n        <Form>\n          <Label>\n            Name\n            <Input type=\"text\" name=\"name\" />\n            <FormError name=\"name\" />\n          </Label>\n\n          <Label>\n            Number\n            <Input type=\"tel\" name=\"number\" />\n            <FormError name=\"number\" />\n          </Label>\n\n          <BtnAdd type=\"submit\">Add contact</BtnAdd>\n        </Form>\n      </FormWrapper>\n    </Formik>\n  );\n};\n","import PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <section>\n      <h1>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import styled from '@emotion/styled';\n\nexport const WrapperContact = styled.div`\n  display: flex;\n`;\n\nexport const Title = styled.h2`\n  margin: 0 10px;\n`;\n\nexport const BtnDelete = styled.button`\n  width: 80px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContacts } from 'redux/Contact/operations';\nimport { WrapperContact, Title, BtnDelete } from './Contact.styled';\n\n\nexport const Contact = ({ name, id, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContacts(id));\n  };\n  return (\n    <WrapperContact>\n      <Title>\n        {name} : {number}\n      </Title>\n      <BtnDelete type=\"button\" onClick={handleDelete}>\n        delete\n      </BtnDelete>\n    </WrapperContact>\n  );\n};\n\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  margin-bottom: 20px;\n  width: auto;\n`;\n","import { Contact } from 'components/Contact/Contact';\nimport { Item } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport {  visibleContacts } from 'redux/Contact/selectors';\n\n\nexport const ContactList = () => {\n  const contacts = useSelector(visibleContacts);\n \n  return (\n    <ul>\n     \n      {contacts.map(contact => {\n          return (\n            <Item key={contact.id}>\n              <Contact {...contact} />\n            </Item>\n          );\n        })\n        }\n        {!contacts.length&&<div>not found</div>}\n\n        \n    </ul>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: block;\n\n  margin-bottom: 30px;\n\n  font-size: 22px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 170px;\n  height: 30px;\n  font-size: 18px;\n  box-shadow: 5px 5px 5px 0;\n  margin: 10px 0;\n`;\n","import React from 'react';\nimport { Input, Label } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/Contact/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const inputChangeHandler = event => {\n    const { value } = event.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div>\n      <Label>\n        Find contact by name\n        <Input onChange={inputChangeHandler} type=\"text\" name=\"filter\" />\n      </Label>\n    </div>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px;\n`;\n\nexport const ContactsTitle = styled.h2`\n  font-weight: 700;\n  font-size: 1.7em;\n`;","import { FormContacts } from '../../components/FormContacts/FormContacts';\nimport { Section } from '../../components/Section/Section';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport {  useDispatch,useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\n\nimport { fetchContacts } from 'redux/Contact/operations';\nimport { FallingLines } from 'react-loader-spinner';\nimport { selectError, selectIsLoading } from 'redux/Contact/selectors';\nimport { Container,ContactsTitle } from './Contacts.styled';\n\n\nexport default function Contacts(){\n  \n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\nconsole.log(isLoading)\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <FormContacts />\n      </Section>\n\n      <ContactsTitle>Contacts</ContactsTitle>\n      <Filter />\n        \n       {isLoading&&!error?<FallingLines/>:<ContactList /> }\n    </Container>\n  );\n};\n"],"names":["FormWrapper","styled","Label","Input","Field","BtnAdd","ErrorText","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","visibleContacts","createSelector","filter","contact","name","toLowerCase","includes","FilterSchema","Yup","shape","min","max","required","number","FormError","render","message","initialValues","FormContacts","dispatch","useDispatch","useSelector","onSubmit","resetForm","some","alert","addContacts","validationSchema","type","Section","title","children","WrapperContact","Title","BtnDelete","Contact","id","onClick","deleteContacts","Item","ContactList","map","length","Filter","onChange","event","value","target","setFilter","Container","ContactsTitle","Contacts","console","log","useEffect","fetchContacts"],"sourceRoot":""}